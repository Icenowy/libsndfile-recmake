/* src/config.h.in.  Generated from configure.ac by autoheader.  */

/* Set to 1 if the compile is GNU GCC. */
#define COMPILER_IS_GCC @SNDFILE_CONF_COMPILER_IS_GCC@

/* Target processor clips on negative float to int conversion. */
#define CPU_CLIPS_NEGATIVE @SNDFILE_CONF_CPU_CLIPS_NEGATIVE@

/* Target processor clips on positive float to int conversion. */
#define CPU_CLIPS_POSITIVE @SNDFILE_CONF_CPU_CLIPS_POSITIVE@

/* Target processor is big endian. */
#define CPU_IS_BIG_ENDIAN @SNDFILE_CONF_CPU_IS_BIG_ENDIAN@

/* Target processor is little endian. */
#define CPU_IS_LITTLE_ENDIAN @SNDFILE_CONF_CPU_IS_LITTLE_ENDIAN@

/* Set to 1 to enable experimental code. */
#define ENABLE_EXPERIMENTAL_CODE @SNDFILE_CONF_ENABLE_EXPERIMENTAL_CODE@

/* Define to 1 if you have the <alsa/asoundlib.h> header file. */
#cmakedefine SNDFILE_CONF_HAVE_ALSA_ASOUNDLIB_H
#ifdef SNDFILE_CONF_HAVE_ALSA_ASOUNDLIB_H
#define HAVE_ALSA_ASOUNDLIB_H @SNDFILE_CONF_HAVE_ALSA_ASOUNDLIB_H@
#else
#define HAVE_ALSA_ASOUNDLIB_H 0
#endif

/* Define to 1 if you have the <byteswap.h> header file. */
#cmakedefine SNDFILE_CONF_HAVE_BYTESWAP_H
#ifdef SNDFILE_CONF_HAVE_BYTESWAP_H
#define HAVE_BYTESWAP_H @SNDFILE_CONF_HAVE_BYTESWAP_H@
#else
#define HAVE_BYTESWAP_H 0
#endif

/* Define to 1 if you have the `calloc' function. */
#cmakedefine SNDFILE_CONF_HAVE_CALLOC
#ifdef SNDFILE_CONF_HAVE_CALLOC
#define HAVE_CALLOC @SNDFILE_CONF_HAVE_CALLOC@
#endif

/* Define to 1 if you have the `ceil' function. */
#cmakedefine SNDFILE_CONF_HAVE_CEIL
#ifdef SNDFILE_CONF_HAVE_CEIL
#define HAVE_CEIL @SNDFILE_CONF_HAVE_CEIL@
#endif

/* Set to 1 if S_IRGRP is defined. */
#cmakedefine SNDFILE_CONF_HAVE_DECL_S_IRGRP
#ifdef SNDFILE_CONF_HAVE_DECL_S_IRGRP
#define HAVE_DECL_S_IRGRP @SNDFILE_CONF_HAVE_DECL_S_IRGRP@
#else
#define HAVE_DECL_S_IRGRP 0
#endif

/* Define to 1 if you have the <dlfcn.h> header file. */
#cmakedefine SNDFILE_CONF_HAVE_DLFCN_H
#ifdef SNDFILE_CONF_HAVE_DLFCN_H
#define HAVE_DLFCN_H @SNDFILE_CONF_HAVE_DLFCN_H@
#else
#define HAVE_DLFCN_H 0
#endif

/* Define to 1 if you have the <endian.h> header file. */
#cmakedefine SNDFILE_CONF_HAVE_ENDIAN_H
#ifdef SNDFILE_CONF_HAVE_ENDIAN_H
#define HAVE_ENDIAN_H @SNDFILE_CONF_HAVE_ENDIAN_H@
#else
#define HAVE_ENDIAN_H 0
#endif

/* Will be set to 1 if flac, ogg and vorbis are available. */
#cmakedefine SNDFILE_CONF_HAVE_EXTERNAL_LIBS
#ifdef SNDFILE_CONF_HAVE_EXTERNAL_LIBS
#define HAVE_EXTERNAL_LIBS @SNDFILE_CONF_HAVE_EXTERNAL_LIBS@
#else
#define HAVE_EXTERNAL_LIBS 0
#endif

/* Set to 1 if the compile supports the struct hack. */
#cmakedefine SNDFILE_CONF_HAVE_FLEXIBLE_ARRAY
#ifdef SNDFILE_CONF_HAVE_FLEXIBLE_ARRAY
#define HAVE_FLEXIBLE_ARRAY @SNDFILE_CONF_HAVE_FLEXIBLE_ARRAY@
#else
#define HAVE_FLEXIBLE_ARRAY 0
#endif

/* Define to 1 if you have the `floor' function. */
#cmakedefine SNDFILE_CONF_HAVE_FLOOR
#ifdef SNDFILE_CONF_HAVE_FLOOR
#define HAVE_FLOOR @SNDFILE_CONF_HAVE_FLOOR@
#endif

/* Define to 1 if you have the `fmod' function. */
#cmakedefine SNDFILE_CONF_HAVE_FMOD
#ifdef SNDFILE_CONF_HAVE_FMOD
#define HAVE_FMOD @SNDFILE_CONF_HAVE_FMOD@
#endif

/* Define to 1 if you have the `free' function. */
#cmakedefine SNDFILE_CONF_HAVE_FREE
#ifdef SNDFILE_CONF_HAVE_FREE
#define HAVE_FREE @SNDFILE_CONF_HAVE_FREE@
#endif

/* Define to 1 if you have the `fstat' function. */
#cmakedefine SNDFILE_CONF_HAVE_FSTAT
#ifdef SNDFILE_CONF_HAVE_FSTAT
#define HAVE_FSTAT @SNDFILE_CONF_HAVE_FSTAT@
#endif

/* Define to 1 if you have the `fsync' function. */
#cmakedefine SNDFILE_CONF_HAVE_FSYNC
#ifdef SNDFILE_CONF_HAVE_FSYNC
#define HAVE_FSYNC @SNDFILE_CONF_HAVE_FSYNC@
#endif

/* Define to 1 if you have the `ftruncate' function. */
#cmakedefine SNDFILE_CONF_HAVE_FTRUNCATE
#ifdef SNDFILE_CONF_HAVE_FTRUNCATE
#define HAVE_FTRUNCATE @SNDFILE_CONF_HAVE_FTRUNCATE@
#endif

/* Define to 1 if you have the `getpagesize' function. */
#cmakedefine SNDFILE_CONF_HAVE_GETPAGESIZE
#ifdef SNDFILE_CONF_HAVE_GETPAGESIZE
#define HAVE_GETPAGESIZE @SNDFILE_CONF_HAVE_GETPAGESIZE@
#endif

/* Define to 1 if you have the `gettimeofday' function. */
#cmakedefine SNDFILE_CONF_HAVE_GETTIMEOFDAY
#ifdef SNDFILE_CONF_HAVE_GETTIMEOFDAY
#define HAVE_GETTIMEOFDAY @SNDFILE_CONF_HAVE_GETTIMEOFDAY@
#endif

/* Define to 1 if you have the `gmtime' function. */
#cmakedefine SNDFILE_CONF_HAVE_GMTIME
#ifdef SNDFILE_CONF_HAVE_GMTIME
#define HAVE_GMTIME @SNDFILE_CONF_HAVE_GMTIME@
#endif

/* Define to 1 if you have the `gmtime_r' function. */
#cmakedefine SNDFILE_CONF_HAVE_GMTIME_R
#ifdef SNDFILE_CONF_HAVE_GMTIME_R
#define HAVE_GMTIME_R @SNDFILE_CONF_HAVE_GMTIME_R@
#endif

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine SNDFILE_CONF_HAVE_INTTYPES_H
#ifdef SNDFILE_CONF_HAVE_INTTYPES_H
#define HAVE_INTTYPES_H @SNDFILE_CONF_HAVE_INTTYPES_H@
#else
#define HAVE_INTTYPES_H 0
#endif

/* Define to 1 if you have the `m' library (-lm). */
#cmakedefine SNDFILE_CONF_HAVE_LIBM
#ifdef SNDFILE_CONF_HAVE_LIBM
#define HAVE_LIBM @SNDFILE_CONF_HAVE_LIBM@
#else
#define HAVE_LIBM 0
#endif

/* Define to 1 if you have the <locale.h> header file. */
#cmakedefine SNDFILE_CONF_HAVE_LOCALE_H
#ifdef SNDFILE_CONF_HAVE_LOCALE_H
#define HAVE_LOCALE_H @SNDFILE_CONF_HAVE_LOCALE_H@
#else
#define HAVE_LOCALE_H 0
#endif

/* Define to 1 if you have the `localtime' function. */
#cmakedefine SNDFILE_CONF_HAVE_LOCALTIME
#ifdef SNDFILE_CONF_HAVE_LOCALTIME
#define HAVE_LOCALTIME @SNDFILE_CONF_HAVE_LOCALTIME@
#endif

/* Define to 1 if you have the `localtime_r' function. */
#cmakedefine SNDFILE_CONF_HAVE_LOCALTIME_R
#ifdef SNDFILE_CONF_HAVE_LOCALTIME_R
#define HAVE_LOCALTIME_R @SNDFILE_CONF_HAVE_LOCALTIME_R@
#endif

/* Define if you have C99's lrint function. */
#cmakedefine SNDFILE_CONF_HAVE_LRINT
#ifdef SNDFILE_CONF_HAVE_LRINT
#define HAVE_LRINT @SNDFILE_CONF_HAVE_LRINT@
#endif

/* Define if you have C99's lrintf function. */
#cmakedefine SNDFILE_CONF_HAVE_LRINTF
#ifdef SNDFILE_CONF_HAVE_LRINTF
#define HAVE_LRINTF @SNDFILE_CONF_HAVE_LRINTF@
#endif

/* Define to 1 if you have the `lseek' function. */
#cmakedefine SNDFILE_CONF_HAVE_LSEEK
#ifdef SNDFILE_CONF_HAVE_LSEEK
#define HAVE_LSEEK @SNDFILE_CONF_HAVE_LSEEK@
#endif

/* Define to 1 if you have the `malloc' function. */
#cmakedefine SNDFILE_CONF_HAVE_MALLOC
#ifdef SNDFILE_CONF_HAVE_MALLOC
#define HAVE_MALLOC @SNDFILE_CONF_HAVE_MALLOC@
#endif

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine SNDFILE_CONF_HAVE_MEMORY_H
#ifdef SNDFILE_CONF_HAVE_MEMORY_H
#define HAVE_MEMORY_H @SNDFILE_CONF_HAVE_MEMORY_H@
#else
#define HAVE_MEMORY_H 0
#endif

/* Define to 1 if you have the `mmap' function. */
#cmakedefine SNDFILE_CONF_HAVE_MMAP
#ifdef SNDFILE_CONF_HAVE_MMAP
#define HAVE_MMAP @SNDFILE_CONF_HAVE_MMAP@
#endif

/* Define to 1 if you have the `open' function. */
#cmakedefine SNDFILE_CONF_HAVE_OPEN
#ifdef SNDFILE_CONF_HAVE_OPEN
#define HAVE_OPEN @SNDFILE_CONF_HAVE_OPEN@
#endif

/* Define to 1 if you have the `pipe' function. */
#cmakedefine SNDFILE_CONF_HAVE_PIPE
#ifdef SNDFILE_CONF_HAVE_PIPE
#define HAVE_PIPE @SNDFILE_CONF_HAVE_PIPE@
#endif

/* Define to 1 if you have the `pread' function. */
#cmakedefine SNDFILE_CONF_HAVE_PREAD
#ifdef SNDFILE_CONF_HAVE_PREAD
#define HAVE_PREAD @SNDFILE_CONF_HAVE_PREAD@
#endif

/* Define to 1 if you have the `pwrite' function. */
#cmakedefine SNDFILE_CONF_HAVE_PWRITE
#ifdef SNDFILE_CONF_HAVE_PWRITE
#define HAVE_PWRITE @SNDFILE_CONF_HAVE_PWRITE@
#endif

/* Define to 1 if you have the `read' function. */
#cmakedefine SNDFILE_CONF_HAVE_READ
#ifdef SNDFILE_CONF_HAVE_READ
#define HAVE_READ @SNDFILE_CONF_HAVE_READ@
#endif

/* Define to 1 if you have the `realloc' function. */
#cmakedefine SNDFILE_CONF_HAVE_REALLOC
#ifdef SNDFILE_CONF_HAVE_REALLOC
#define HAVE_REALLOC @SNDFILE_CONF_HAVE_REALLOC@
#endif

/* Define to 1 if you have the `setlocale' function. */
#cmakedefine SNDFILE_CONF_HAVE_SETLOCALE
#ifdef SNDFILE_CONF_HAVE_SETLOCALE
#define HAVE_SETLOCALE @SNDFILE_CONF_HAVE_SETLOCALE@
#endif

/* Define to 1 if you have the <sndio.h> header file. */
#cmakedefine SNDFILE_CONF_HAVE_SNDIO_H
#ifdef SNDFILE_CONF_HAVE_SNDIO_H
#define HAVE_SNDIO_H @SNDFILE_CONF_HAVE_SNDIO_H@
#else
#define HAVE_SNDIO_H 0
#endif

/* Define to 1 if you have the `snprintf' function. */
#cmakedefine SNDFILE_CONF_HAVE_SNPRINTF
#ifdef SNDFILE_CONF_HAVE_SNPRINTF
#define HAVE_SNPRINTF @SNDFILE_CONF_HAVE_SNPRINTF@
#endif

/* Set to 1 if you have libsqlite3. */
#cmakedefine SNDFILE_CONF_HAVE_SQLITE3
#ifdef SNDFILE_CONF_HAVE_SQLITE3
#define HAVE_SQLITE3 @SNDFILE_CONF_HAVE_SQLITE3@
#else
#define HAVE_SQLITE3 0
#endif

/* Define to 1 if the system has the type `ssize_t'. */
#cmakedefine SNDFILE_CONF_HAVE_SSIZE_T
#ifdef SNDFILE_CONF_HAVE_SSIZE_T
#define HAVE_SSIZE_T @SNDFILE_CONF_HAVE_SSIZE_T@
#else
#define HAVE_SSIZE_T 0
#endif

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine SNDFILE_CONF_HAVE_STDINT_H
#ifdef SNDFILE_CONF_HAVE_STDINT_H
#define HAVE_STDINT_H @SNDFILE_CONF_HAVE_STDINT_H@
#else
#define HAVE_STDINT_H 0
#endif

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine SNDFILE_CONF_HAVE_STDLIB_H
#ifdef SNDFILE_CONF_HAVE_STDLIB_H
#define HAVE_STDLIB_H @SNDFILE_CONF_HAVE_STDLIB_H@
#else
#define HAVE_STDLIB_H 0
#endif

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine SNDFILE_CONF_HAVE_STRINGS_H
#ifdef SNDFILE_CONF_HAVE_STRINGS_H
#define HAVE_STRINGS_H @SNDFILE_CONF_HAVE_STRINGS_H@
#else
#define HAVE_STRINGS_H 0
#endif

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine SNDFILE_CONF_HAVE_STRING_H
#ifdef SNDFILE_CONF_HAVE_STRING_H
#define HAVE_STRING_H @SNDFILE_CONF_HAVE_STRING_H@
#else
#define HAVE_STRING_H 0
#endif

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine SNDFILE_CONF_HAVE_SYS_STAT_H
#ifdef SNDFILE_CONF_HAVE_SYS_STAT_H
#define HAVE_SYS_STAT_H @SNDFILE_CONF_HAVE_SYS_STAT_H@
#else
#define HAVE_SYS_STAT_H 0
#endif

/* Define to 1 if you have the <sys/time.h> header file. */
#cmakedefine SNDFILE_CONF_HAVE_SYS_TIME_H
#ifdef SNDFILE_CONF_HAVE_SYS_TIME_H
#define HAVE_SYS_TIME_H @SNDFILE_CONF_HAVE_SYS_TIME_H@
#else
#define HAVE_SYS_TIME_H 0
#endif

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine SNDFILE_CONF_HAVE_SYS_TYPES_H
#ifdef SNDFILE_CONF_HAVE_SYS_TYPES_H
#define HAVE_SYS_TYPES_H @SNDFILE_CONF_HAVE_SYS_TYPES_H@
#else
#define HAVE_SYS_TYPES_H 0
#endif

/* Define to 1 if you have <sys/wait.h> that is POSIX.1 compatible. */
#cmakedefine SNDFILE_CONF_HAVE_SYS_WAIT_H
#ifdef SNDFILE_CONF_HAVE_SYS_WAIT_H
#define HAVE_SYS_WAIT_H @SNDFILE_CONF_HAVE_SYS_WAIT_H@
#else
#define HAVE_SYS_WAIT_H 0
#endif

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine SNDFILE_CONF_HAVE_UNISTD_H
#ifdef SNDFILE_CONF_HAVE_UNISTD_H
#define HAVE_UNISTD_H @SNDFILE_CONF_HAVE_UNISTD_H@
#else
#define HAVE_UNISTD_H 0
#endif

/* Define to 1 if you have the `vsnprintf' function. */
#cmakedefine SNDFILE_CONF_HAVE_VSNPRINTF
#ifdef SNDFILE_CONF_HAVE_VSNPRINTF
#define HAVE_VSNPRINTF @SNDFILE_CONF_HAVE_VSNPRINTF@
#else
#define HAVE_VSNPRINTF 0
#endif

/* Define to 1 if you have the `waitpid' function. */
#cmakedefine SNDFILE_CONF_HAVE_WAITPID
#ifdef SNDFILE_CONF_HAVE_WAITPID
#define HAVE_WAITPID @SNDFILE_CONF_HAVE_WAITPID@
#else
#define HAVE_WAITPID 0
#endif

/* Define to 1 if you have the `write' function. */
#cmakedefine SNDFILE_CONF_HAVE_WRITE
#ifdef SNDFILE_CONF_HAVE_WRITE
#define HAVE_WRITE @SNDFILE_CONF_HAVE_WRITE@
#else
#define HAVE_WRITE 0
#endif

/* Define to the sub-directory in which libtool stores uninstalled libraries.
   */
#define LT_OBJDIR ".libs/"

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
#define NO_MINUS_C_MINUS_O @SNDFILE_CONF_NO_MINUS_C_MINUS_O@

/* Set to 1 if compiling for MacOSX */
#define OS_IS_MACOSX @SNDFILE_CONF_OS_IS_MACOSX@

/* Set to 1 if compiling for Win32 */
#define OS_IS_WIN32 @SNDFILE_CONF_OS_IS_WIN32@

/* Name of package */
#define PACKAGE "libsndfile"

/* Define to the address where bug reports for this package should be sent. */
#define PACKAGE_BUGREPORT "sndfile@mega-nerd.com"

/* Define to the full name of this package. */
#define PACKAGE_NAME "libsndfile"

/* Define to the full name and version of this package. */
#define PACKAGE_STRING "libsndfile 1.0.25"

/* Define to the one symbol short name of this package. */
#define PACKAGE_TARNAME "libsndfile"

/* Define to the home page for this package. */
#define PACKAGE_URL "https://github.com/m13253/libsndfile-cmake"

/* Define to the version of this package. */
#define PACKAGE_VERSION "1.0.25"

/* Set to maximum allowed value of sf_count_t type. */
#cmakedefine SNDFILE_CONF_SF_COUNT_MAX
#ifdef SNDFILE_CONF_SF_COUNT_MAX
#define SF_COUNT_MAX @SNDFILE_CONF_SF_COUNT_MAX@
#endif

/* The size of `double', as computed by sizeof. */
#cmakedefine SNDFILE_CONF_SIZEOF_DOUBLE
#ifdef SNDFILE_CONF_SIZEOF_DOUBLE
#define SIZEOF_DOUBLE @SNDFILE_CONF_SIZEOF_DOUBLE@
#endif

/* The size of `float', as computed by sizeof. */
#cmakedefine SNDFILE_CONF_SIZEOF_FLOAT
#ifdef SNDFILE_CONF_SIZEOF_FLOAT
#define SIZEOF_FLOAT @SNDFILE_CONF_SIZEOF_FLOAT@
#endif

/* The size of `int', as computed by sizeof. */
#cmakedefine SNDFILE_CONF_SIZEOF_INT
#ifdef SNDFILE_CONF_SIZEOF_INT
#define SIZEOF_INT @SNDFILE_CONF_SIZEOF_INT@
#endif

/* The size of `int64_t', as computed by sizeof. */
#cmakedefine SNDFILE_CONF_SIZEOF_INT64_T
#ifdef SNDFILE_CONF_SIZEOF_INT64_T
#define SIZEOF_INT64_T @SNDFILE_CONF_SIZEOF_INT64_T@
#endif

/* The size of `loff_t', as computed by sizeof. */
#cmakedefine SNDFILE_CONF_SIZEOF_LOFF_T
#ifdef SNDFILE_CONF_SIZEOF_LOFF_T
#define SIZEOF_LOFF_T @SNDFILE_CONF_SIZEOF_LOFF_T@
#endif

/* The size of `long', as computed by sizeof. */
#cmakedefine SNDFILE_CONF_SIZEOF_LONG
#ifdef SNDFILE_CONF_SIZEOF_LONG
#define SIZEOF_LONG @SNDFILE_CONF_SIZEOF_LONG@
#endif

/* The size of `long long', as computed by sizeof. */
#cmakedefine SNDFILE_CONF_SIZEOF_LONG_LONG
#ifdef SNDFILE_CONF_SIZEOF_LONG_LONG
#define SIZEOF_LONG_LONG @SNDFILE_CONF_SIZEOF_LONG_LONG@
#endif

/* The size of `off64_t', as computed by sizeof. */
#cmakedefine SNDFILE_CONF_SIZEOF_OFF64_T
#ifdef SNDFILE_CONF_SIZEOF_OFF64_T
#define SIZEOF_OFF64_T @SNDFILE_CONF_SIZEOF_OFF64_T@
#endif

/* The size of `off_t', as computed by sizeof. */
#cmakedefine SNDFILE_CONF_SIZEOF_OFF_T
#ifdef SNDFILE_CONF_SIZEOF_OFF_T
#define SIZEOF_OFF_T @SNDFILE_CONF_SIZEOF_OFF_T@
#endif

/* Set to sizeof (long) if unknown. */
#cmakedefine SNDFILE_CONF_SIZEOF_SF_COUNT_T
#ifdef SNDFILE_CONF_SIZEOF_SF_COUNT_T
#define SIZEOF_SF_COUNT_T @SNDFILE_CONF_SIZEOF_SF_COUNT_T@
#endif

/* The size of `short', as computed by sizeof. */
#cmakedefine SNDFILE_CONF_SIZEOF_SHORT
#ifdef SNDFILE_CONF_SIZEOF_SHORT
#define SIZEOF_SHORT @SNDFILE_CONF_SIZEOF_SHORT@
#endif

/* The size of `size_t', as computed by sizeof. */
#cmakedefine SNDFILE_CONF_SIZEOF_SIZE_T
#ifdef SNDFILE_CONF_SIZEOF_SIZE_T
#define SIZEOF_SIZE_T @SNDFILE_CONF_SIZEOF_SIZE_T@
#endif

/* The size of `ssize_t', as computed by sizeof. */
#cmakedefine SNDFILE_CONF_SIZEOF_SSIZE_T
#ifdef SNDFILE_CONF_SIZEOF_SSIZE_T
#define SIZEOF_SSIZE_T @SNDFILE_CONF_SIZEOF_SSIZE_T@
#endif

/* The size of `void*', as computed by sizeof. */
#cmakedefine SNDFILE_CONF_SIZEOF_VOIDP
#ifdef SNDFILE_CONF_SIZEOF_VOIDP
#define SIZEOF_VOIDP @SNDFILE_CONF_SIZEOF_VOIDP@
#endif

/* The size of `wchar_t', as computed by sizeof. */
#cmakedefine SNDFILE_CONF_SIZEOF_WCHAR_T
#ifdef SNDFILE_CONF_SIZEOF_WCHAR_T
#define SIZEOF_WCHAR_T @SNDFILE_CONF_SIZEOF_WCHAR_T@
#endif

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine SNDFILE_CONF_STDC_HEADERS
#ifdef SNDFILE_CONF_STDC_HEADERS
#define STDC_HEADERS @SNDFILE_CONF_STDC_HEADERS@
#endif

/* Set to long if unknown. */
#cmakedefine SNDFILE_CONF_TYPEOF_SF_COUNT_T
#ifdef SNDFILE_CONF_TYPEOF_SF_COUNT_T
#define TYPEOF_SF_COUNT_T @SNDFILE_CONF_TYPEOF_SF_COUNT_T@
#endif

/* Set to 1 to use the native windows API */
#define USE_WINDOWS_API @SNDFILE_CONF_USE_WINDOWS_API@

/* Version number of package */
#define VERSION "1.0.25"

/* Set to 1 if windows DLL is being built. */
#define WIN32_TARGET_DLL @SNDFILE_CONF_WIN32_TARGET_DLL@

/* Target processor is big endian. */
#define WORDS_BIGENDIAN @SNDFILE_CONF_WORDS_BIGENDIAN@

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define to make fseeko etc. visible, on some hosts. */
/* #undef _LARGEFILE_SOURCE */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Set to 1 to use C99 printf/snprintf in MinGW. */
/* #undef __USE_MINGW_ANSI_STDIO */


#if defined(_MSC_VER) && !defined(SNDFILE_CONF_SIZEOF_SSIZE_T)
#define ssize_t ptrdiff_t
#endif

#ifdef _MSC_VER
#define __func__ __FUNCTION__
#endif
